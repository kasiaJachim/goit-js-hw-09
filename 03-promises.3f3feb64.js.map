{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,cAAc,IAGhB,MAAMC,EAAaC,SAASC,cAAc,yBACpCC,EAAYF,SAASC,cAAc,wBACtBD,SAASC,cAAc,0BAK1C,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAbAL,SAASC,cAAc,SAE/BY,iBAAiB,UActB,SAAsBC,GACpBA,EAAEC,gBACF,MAAMC,EAAUC,OAAOlB,EAAWmB,OAC5BC,EAASF,OAAOf,EAAUgB,OAC1BE,EAAWH,OAAOf,EAAUgB,OAElC,IAAIG,EAAaL,EAEjB,IAAK,IAAIM,EAAI,EAAGA,GAAKF,EAAUE,GAAK,EAClCnB,EAAcmB,EAAGD,GACdE,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBV,EAAAF,GAASG,OAAO4B,QACd,uBAAqBpB,QAAiBC,MAAU,IAEnDoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBV,EAAAF,GAASG,OAAO8B,QACd,sBAAoBtB,QAAeC,MAAU,IAEnDgB,EAAaL,EAAUM,EAAIH,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  pauseOnHover: false,\n});\n\nconst inputDeyal = document.querySelector('input[name = \"delay\"]');\nconst inputStep = document.querySelector('input[name = \"step\"]');\nconst inputAmout = document.querySelector('input[name = \"amount\"]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }else{\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\nfunction handleSubmit(e) {\n  e.preventDefalt();\n  const delayEl = Number(inputDeyal.value);\n  const stepEl = Number(inputStep.value);\n  const amountEl = Number(inputStep.value);\n\n  let firstDelay = delayEl;\n\n  for (let i = 1; i <= amountEl; i += 1) {\n    createPromise(i, firstDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,);\n      });\n    firstDelay = delayEl + i * stepEl;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$parcel$interopDefault","Notify","init","pauseOnHover","$47d4ff9957288465$var$inputDeyal","document","querySelector","$47d4ff9957288465$var$inputStep","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefalt","delayEl","Number","value","stepEl","amountEl","firstDelay","i","then","success","catch","failure"],"version":3,"file":"03-promises.3f3feb64.js.map"}